{"version":3,"file":"plugin.js","sources":["esm/plugin/models.js","esm/plugin/factory.js","esm/logger.js","esm/error.js","esm/socket.js"],"sourcesContent":["export var PluginEvents;\n(function (PluginEvents) {\n    PluginEvents[\"OnData\"] = \"OnData\";\n    PluginEvents[\"OnClose\"] = \"OnClose\";\n    PluginEvents[\"OnError\"] = \"OnError\";\n})(PluginEvents || (PluginEvents = {}));\n//# sourceMappingURL=models.js.map","import { registerPlugin } from '@capacitor/core';\nconst pluginName = 'CapacitorSocketConnectionPlugin';\nexport const createPlugin = (pluginName, options) => {\n    return registerPlugin(pluginName, { web: options === null || options === void 0 ? void 0 : options.web });\n};\nconst plugin = createPlugin(pluginName);\nexport { plugin as NativePlugin };\n//# sourceMappingURL=factory.js.map","import { LoggerFactory, LoggerObserver, } from '@spryrocks/logger-plugin';\nconst _loggerObserver = new LoggerObserver();\nconst loggerObserver = _loggerObserver;\nconst pluginName = 'SocketConnectionPlugin';\nconst prepareLogData = ({ data }) => (Object.assign(Object.assign({}, data), { plugin: pluginName, action: undefined }));\nconst factory = new LoggerFactory({\n    notifier: _loggerObserver,\n    prepareLogData,\n    globalData: undefined,\n});\nconst createLogger = (tag) => factory.createLogger(tag);\nexport { loggerObserver as LoggerObserver, createLogger };\n//# sourceMappingURL=logger.js.map","export class SocketConnectionError extends Error {\n    constructor(message) {\n        super(message);\n        Object.setPrototypeOf(this, new.target.prototype);\n    }\n}\n//# sourceMappingURL=error.js.map","import { NativePlugin, PluginEvents, } from './plugin/index';\nimport { createLogger } from './logger';\nimport { ErrorLevel } from '@spryrocks/logger-plugin';\nimport { SocketConnectionError } from './error';\nexport class Socket {\n    // eslint-disable-next-line @typescript-eslint/no-useless-constructor,@typescript-eslint/no-empty-function\n    constructor(_options) {\n        this.logger = createLogger();\n        this._state = 'initial';\n        this.setupListeners();\n    }\n    //region Actions\n    async open(host, port) {\n        this.logger.debug('Open connection', { host, port });\n        this.checkStateOrThrow('initial', `You can call \"open\" method only once`);\n        this.onOpeningInternal();\n        let close;\n        try {\n            const { link } = await this.wrapCall(NativePlugin.openConnection({ host, port }));\n            close = this.checkState('closing');\n            this.onOpenedInternal(link);\n        }\n        catch (error) {\n            this.onErrorInternal(error);\n            throw error;\n        }\n        if (close) {\n            this.closeInternal().catch();\n        }\n    }\n    async write(data) {\n        this.checkStateOrThrow('opened', `Not supported state: ${this.state}`);\n        return this.wrapCall(NativePlugin.sendData({ link: this.getLinkOrThrow(), data: Array.from(data) }));\n    }\n    async close() {\n        if (this.checkState('initial')) {\n            this.logger.debug('Connection closed from initial state');\n            this.onClosedInternal();\n            return;\n        }\n        if (this.checkState('opening')) {\n            this.logger.debug('Connection closing from opening state');\n            this.onClosingInternal();\n            return;\n        }\n        await this.closeInternal();\n    }\n    //endregion\n    //region Events\n    onDataEventReceived(event) {\n        if (!this.checkEventUuid(event))\n            return;\n        this.onDataInternal(event.data);\n    }\n    onCloseEventReceived(event) {\n        if (!this.checkEventUuid(event))\n            return;\n        this.logger.info('onClose event received', { event });\n        this.onClosedInternal();\n    }\n    onErrorEventReceived(event) {\n        if (!this.checkEventUuid(event))\n            return;\n        this.logger.info('onError event received', { event });\n        this.onErrorInternal(this.createErrorFromObject(event.error));\n    }\n    //endregion\n    //region State & Helpers\n    get state() {\n        return this._state;\n    }\n    set state(newState) {\n        const oldState = this._state;\n        this.logger.info(`Set state: \"${newState}\"`, { oldState });\n        this._state = newState;\n    }\n    getLink() {\n        return this._link;\n    }\n    getLinkOrThrow() {\n        if (!this._link)\n            throw new SocketConnectionError('PluginLink is undefined');\n        return this._link;\n    }\n    setLink(link) {\n        this._link = link;\n        this.logger.updateParams({ link: link.uuid });\n    }\n    checkState(...states) {\n        return states.includes(this.state);\n    }\n    checkEventUuid(event) {\n        var _a;\n        return event.socketUuid === ((_a = this.getLink()) === null || _a === void 0 ? void 0 : _a.uuid);\n    }\n    checkStateOrThrow(state, errorMessage) {\n        if (!this.checkState(state)) {\n            this.logger.error(undefined, errorMessage, { level: ErrorLevel.Low });\n            throw new SocketConnectionError(errorMessage);\n        }\n    }\n    //endregion\n    //region Internal\n    onOpeningInternal() {\n        this.state = 'opening';\n    }\n    onOpenedInternal(link) {\n        this.setLink(link);\n        this.state = 'opened';\n        this.logger.info('Connection opened');\n    }\n    onDataInternal(bytes) {\n        if (!this.checkState('opened'))\n            return;\n        const data = new Uint8Array(bytes);\n        if (this.onData)\n            this.onData(data);\n    }\n    onErrorInternal(error) {\n        if (this.checkState('error'))\n            return;\n        if (this.checkState('closed'))\n            return;\n        if (this.checkState('closing')) {\n            this.onClosedInternal();\n            return;\n        }\n        this.logger.error(error, undefined, { level: ErrorLevel.Medium });\n        this.state = 'error';\n        if (this.onError)\n            this.onError(error);\n    }\n    onClosingInternal() {\n        this.state = 'closing';\n    }\n    onClosedInternal() {\n        if (this.checkState('closed'))\n            return;\n        if (this.checkState('error'))\n            return;\n        this.state = 'closed';\n        if (this.onClose)\n            this.onClose();\n    }\n    async closeInternal() {\n        if (this.checkState('opened')) {\n            this.logger.debug('Close connection');\n            this.onClosingInternal();\n            await this.wrapCall(NativePlugin.closeConnection({ link: this.getLinkOrThrow() }));\n            this.onClosedInternal();\n            this.logger.info('Connection closed');\n            return;\n        }\n        this.logger.info(`Cannot close connection from state \"${this.state}\"`);\n    }\n    setupListeners() {\n        NativePlugin.addListener(PluginEvents.OnData, (data) => {\n            this.onDataEventReceived(data);\n        });\n        NativePlugin.addListener(PluginEvents.OnClose, (data) => {\n            this.onCloseEventReceived(data);\n        });\n        NativePlugin.addListener(PluginEvents.OnError, (data) => {\n            this.onErrorEventReceived(data);\n        });\n    }\n    //endregion\n    createErrorFromObject(error) {\n        return new SocketConnectionError(error.message);\n    }\n    processErrorCode(code) {\n        try {\n            const errorObject = JSON.parse(code);\n            return this.createErrorFromObject(errorObject);\n        }\n        catch (_a) {\n            return undefined;\n        }\n    }\n    processError(error) {\n        var _a;\n        if (error.code) {\n            const processedError = this.processErrorCode(error.code);\n            if (processedError)\n                return processedError;\n        }\n        return new SocketConnectionError((_a = error.errorMessage) !== null && _a !== void 0 ? _a : 'Unknown error');\n    }\n    wrapCall(promise) {\n        return promise.catch((error) => {\n            throw this.processError(error);\n        });\n    }\n}\n//# sourceMappingURL=socket.js.map"],"names":["pluginName","registerPlugin","LoggerObserver","LoggerFactory","NativePlugin","ErrorLevel"],"mappings":";;;IAAO,IAAI,YAAY,CAAC;IACxB,CAAC,UAAU,YAAY,EAAE;IACzB,IAAI,YAAY,CAAC,QAAQ,CAAC,GAAG,QAAQ,CAAC;IACtC,IAAI,YAAY,CAAC,SAAS,CAAC,GAAG,SAAS,CAAC;IACxC,IAAI,YAAY,CAAC,SAAS,CAAC,GAAG,SAAS,CAAC;IACxC,CAAC,EAAE,YAAY,KAAK,YAAY,GAAG,EAAE,CAAC,CAAC;;ICJvC,MAAMA,YAAU,GAAG,iCAAiC,CAAC;IAC9C,MAAM,YAAY,GAAG,CAAC,UAAU,EAAE,OAAO,KAAK;IACrD,IAAI,OAAOC,mBAAc,CAAC,UAAU,EAAE,EAAE,GAAG,EAAE,OAAO,KAAK,IAAI,IAAI,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC;IAC9G,CAAC,CAAC;IACF,MAAM,MAAM,GAAG,YAAY,CAACD,YAAU,CAAC;;ICJvC,MAAM,eAAe,GAAG,IAAIE,2BAAc,EAAE,CAAC;AACxC,UAAC,cAAc,GAAG,gBAAgB;IACvC,MAAM,UAAU,GAAG,wBAAwB,CAAC;IAC5C,MAAM,cAAc,GAAG,CAAC,EAAE,IAAI,EAAE,MAAM,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,MAAM,EAAE,UAAU,EAAE,MAAM,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC;IACzH,MAAM,OAAO,GAAG,IAAIC,0BAAa,CAAC;IAClC,IAAI,QAAQ,EAAE,eAAe;IAC7B,IAAI,cAAc;IAClB,IAAI,UAAU,EAAE,SAAS;IACzB,CAAC,CAAC,CAAC;IACH,MAAM,YAAY,GAAG,CAAC,GAAG,KAAK,OAAO,CAAC,YAAY,CAAC,GAAG,CAAC;;ICVhD,MAAM,qBAAqB,SAAS,KAAK,CAAC;IACjD,IAAI,WAAW,CAAC,OAAO,EAAE;IACzB,QAAQ,KAAK,CAAC,OAAO,CAAC,CAAC;IACvB,QAAQ,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;IAC1D,KAAK;IACL;;ICDO,MAAM,MAAM,CAAC;IACpB;IACA,IAAI,WAAW,CAAC,QAAQ,EAAE;IAC1B,QAAQ,IAAI,CAAC,MAAM,GAAG,YAAY,EAAE,CAAC;IACrC,QAAQ,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC;IAChC,QAAQ,IAAI,CAAC,cAAc,EAAE,CAAC;IAC9B,KAAK;IACL;IACA,IAAI,MAAM,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE;IAC3B,QAAQ,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,iBAAiB,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;IAC7D,QAAQ,IAAI,CAAC,iBAAiB,CAAC,SAAS,EAAE,CAAC,oCAAoC,CAAC,CAAC,CAAC;IAClF,QAAQ,IAAI,CAAC,iBAAiB,EAAE,CAAC;IACjC,QAAQ,IAAI,KAAK,CAAC;IAClB,QAAQ,IAAI;IACZ,YAAY,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,IAAI,CAAC,QAAQ,CAACC,MAAY,CAAC,cAAc,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;IAC9F,YAAY,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;IAC/C,YAAY,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;IACxC,SAAS;IACT,QAAQ,OAAO,KAAK,EAAE;IACtB,YAAY,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;IACxC,YAAY,MAAM,KAAK,CAAC;IACxB,SAAS;IACT,QAAQ,IAAI,KAAK,EAAE;IACnB,YAAY,IAAI,CAAC,aAAa,EAAE,CAAC,KAAK,EAAE,CAAC;IACzC,SAAS;IACT,KAAK;IACL,IAAI,MAAM,KAAK,CAAC,IAAI,EAAE;IACtB,QAAQ,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE,CAAC,qBAAqB,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAC/E,QAAQ,OAAO,IAAI,CAAC,QAAQ,CAACA,MAAY,CAAC,QAAQ,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,cAAc,EAAE,EAAE,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7G,KAAK;IACL,IAAI,MAAM,KAAK,GAAG;IAClB,QAAQ,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE;IACxC,YAAY,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,sCAAsC,CAAC,CAAC;IACtE,YAAY,IAAI,CAAC,gBAAgB,EAAE,CAAC;IACpC,YAAY,OAAO;IACnB,SAAS;IACT,QAAQ,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE;IACxC,YAAY,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,uCAAuC,CAAC,CAAC;IACvE,YAAY,IAAI,CAAC,iBAAiB,EAAE,CAAC;IACrC,YAAY,OAAO;IACnB,SAAS;IACT,QAAQ,MAAM,IAAI,CAAC,aAAa,EAAE,CAAC;IACnC,KAAK;IACL;IACA;IACA,IAAI,mBAAmB,CAAC,KAAK,EAAE;IAC/B,QAAQ,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC;IACvC,YAAY,OAAO;IACnB,QAAQ,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IACxC,KAAK;IACL,IAAI,oBAAoB,CAAC,KAAK,EAAE;IAChC,QAAQ,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC;IACvC,YAAY,OAAO;IACnB,QAAQ,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,wBAAwB,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC;IAC9D,QAAQ,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAChC,KAAK;IACL,IAAI,oBAAoB,CAAC,KAAK,EAAE;IAChC,QAAQ,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC;IACvC,YAAY,OAAO;IACnB,QAAQ,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,wBAAwB,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC;IAC9D,QAAQ,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;IACtE,KAAK;IACL;IACA;IACA,IAAI,IAAI,KAAK,GAAG;IAChB,QAAQ,OAAO,IAAI,CAAC,MAAM,CAAC;IAC3B,KAAK;IACL,IAAI,IAAI,KAAK,CAAC,QAAQ,EAAE;IACxB,QAAQ,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC;IACrC,QAAQ,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,YAAY,EAAE,QAAQ,CAAC,CAAC,CAAC,EAAE,EAAE,QAAQ,EAAE,CAAC,CAAC;IACnE,QAAQ,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC/B,KAAK;IACL,IAAI,OAAO,GAAG;IACd,QAAQ,OAAO,IAAI,CAAC,KAAK,CAAC;IAC1B,KAAK;IACL,IAAI,cAAc,GAAG;IACrB,QAAQ,IAAI,CAAC,IAAI,CAAC,KAAK;IACvB,YAAY,MAAM,IAAI,qBAAqB,CAAC,yBAAyB,CAAC,CAAC;IACvE,QAAQ,OAAO,IAAI,CAAC,KAAK,CAAC;IAC1B,KAAK;IACL,IAAI,OAAO,CAAC,IAAI,EAAE;IAClB,QAAQ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;IAC1B,QAAQ,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;IACtD,KAAK;IACL,IAAI,UAAU,CAAC,GAAG,MAAM,EAAE;IAC1B,QAAQ,OAAO,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC3C,KAAK;IACL,IAAI,cAAc,CAAC,KAAK,EAAE;IAC1B,QAAQ,IAAI,EAAE,CAAC;IACf,QAAQ,OAAO,KAAK,CAAC,UAAU,MAAM,CAAC,EAAE,GAAG,IAAI,CAAC,OAAO,EAAE,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC;IACzG,KAAK;IACL,IAAI,iBAAiB,CAAC,KAAK,EAAE,YAAY,EAAE;IAC3C,QAAQ,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE;IACrC,YAAY,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,EAAE,YAAY,EAAE,EAAE,KAAK,EAAEC,uBAAU,CAAC,GAAG,EAAE,CAAC,CAAC;IAClF,YAAY,MAAM,IAAI,qBAAqB,CAAC,YAAY,CAAC,CAAC;IAC1D,SAAS;IACT,KAAK;IACL;IACA;IACA,IAAI,iBAAiB,GAAG;IACxB,QAAQ,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;IAC/B,KAAK;IACL,IAAI,gBAAgB,CAAC,IAAI,EAAE;IAC3B,QAAQ,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IAC3B,QAAQ,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;IAC9B,QAAQ,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;IAC9C,KAAK;IACL,IAAI,cAAc,CAAC,KAAK,EAAE;IAC1B,QAAQ,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC;IACtC,YAAY,OAAO;IACnB,QAAQ,MAAM,IAAI,GAAG,IAAI,UAAU,CAAC,KAAK,CAAC,CAAC;IAC3C,QAAQ,IAAI,IAAI,CAAC,MAAM;IACvB,YAAY,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAC9B,KAAK;IACL,IAAI,eAAe,CAAC,KAAK,EAAE;IAC3B,QAAQ,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC;IACpC,YAAY,OAAO;IACnB,QAAQ,IAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC;IACrC,YAAY,OAAO;IACnB,QAAQ,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE;IACxC,YAAY,IAAI,CAAC,gBAAgB,EAAE,CAAC;IACpC,YAAY,OAAO;IACnB,SAAS;IACT,QAAQ,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,SAAS,EAAE,EAAE,KAAK,EAAEA,uBAAU,CAAC,MAAM,EAAE,CAAC,CAAC;IAC1E,QAAQ,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC;IAC7B,QAAQ,IAAI,IAAI,CAAC,OAAO;IACxB,YAAY,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IAChC,KAAK;IACL,IAAI,iBAAiB,GAAG;IACxB,QAAQ,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;IAC/B,KAAK;IACL,IAAI,gBAAgB,GAAG;IACvB,QAAQ,IAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC;IACrC,YAAY,OAAO;IACnB,QAAQ,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC;IACpC,YAAY,OAAO;IACnB,QAAQ,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;IAC9B,QAAQ,IAAI,IAAI,CAAC,OAAO;IACxB,YAAY,IAAI,CAAC,OAAO,EAAE,CAAC;IAC3B,KAAK;IACL,IAAI,MAAM,aAAa,GAAG;IAC1B,QAAQ,IAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE;IACvC,YAAY,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC;IAClD,YAAY,IAAI,CAAC,iBAAiB,EAAE,CAAC;IACrC,YAAY,MAAM,IAAI,CAAC,QAAQ,CAACD,MAAY,CAAC,eAAe,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,cAAc,EAAE,EAAE,CAAC,CAAC,CAAC;IAC/F,YAAY,IAAI,CAAC,gBAAgB,EAAE,CAAC;IACpC,YAAY,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;IAClD,YAAY,OAAO;IACnB,SAAS;IACT,QAAQ,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,oCAAoC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/E,KAAK;IACL,IAAI,cAAc,GAAG;IACrB,QAAQA,MAAY,CAAC,WAAW,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,IAAI,KAAK;IAChE,YAAY,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;IAC3C,SAAS,CAAC,CAAC;IACX,QAAQA,MAAY,CAAC,WAAW,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC,IAAI,KAAK;IACjE,YAAY,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC;IAC5C,SAAS,CAAC,CAAC;IACX,QAAQA,MAAY,CAAC,WAAW,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC,IAAI,KAAK;IACjE,YAAY,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC;IAC5C,SAAS,CAAC,CAAC;IACX,KAAK;IACL;IACA,IAAI,qBAAqB,CAAC,KAAK,EAAE;IACjC,QAAQ,OAAO,IAAI,qBAAqB,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IACxD,KAAK;IACL,IAAI,gBAAgB,CAAC,IAAI,EAAE;IAC3B,QAAQ,IAAI;IACZ,YAAY,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IACjD,YAAY,OAAO,IAAI,CAAC,qBAAqB,CAAC,WAAW,CAAC,CAAC;IAC3D,SAAS;IACT,QAAQ,OAAO,EAAE,EAAE;IACnB,YAAY,OAAO,SAAS,CAAC;IAC7B,SAAS;IACT,KAAK;IACL,IAAI,YAAY,CAAC,KAAK,EAAE;IACxB,QAAQ,IAAI,EAAE,CAAC;IACf,QAAQ,IAAI,KAAK,CAAC,IAAI,EAAE;IACxB,YAAY,MAAM,cAAc,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IACrE,YAAY,IAAI,cAAc;IAC9B,gBAAgB,OAAO,cAAc,CAAC;IACtC,SAAS;IACT,QAAQ,OAAO,IAAI,qBAAqB,CAAC,CAAC,EAAE,GAAG,KAAK,CAAC,YAAY,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,EAAE,GAAG,eAAe,CAAC,CAAC;IACrH,KAAK;IACL,IAAI,QAAQ,CAAC,OAAO,EAAE;IACtB,QAAQ,OAAO,OAAO,CAAC,KAAK,CAAC,CAAC,KAAK,KAAK;IACxC,YAAY,MAAM,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;IAC3C,SAAS,CAAC,CAAC;IACX,KAAK;IACL;;;;;;;;;;;;"}